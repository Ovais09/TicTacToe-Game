package tictactoegame;

import java.awt.*;
import java.awt.event.*;
import javax.swing.*;


public class Tictactoegame implements ActionListener {

    private static int String(String game) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

   

JFrame window = new JFrame("Tic-Tac-Toe");
JButton button1 = new JButton("");
JButton button2 = new JButton("");
JButton button3 = new JButton("");
JButton button4 = new JButton("");
JButton button5 = new JButton("");
JButton button6 = new JButton("");
JButton button7 = new JButton("");
JButton button8 = new JButton("");
JButton button9 = new JButton("");
String letter = "";
public int count = 0;
public boolean win = false;

public Tictactoegame(){

window.setSize(300,300);
window.setLayout(new GridLayout(3,3));
window.add(button1);
window.add(button2);
window.add(button3);
window.add(button4);
window.add(button5);
window.add(button6);
window.add(button7);
window.add(button8);
window.add(button9);
button1.addActionListener(this);
button2.addActionListener(this);
button3.addActionListener(this);
button4.addActionListener(this);
button5.addActionListener(this);
button6.addActionListener(this);
button7.addActionListener(this);
button8.addActionListener(this);
button9.addActionListener(this);
window.setVisible(true);
}   @Override
    public void actionPerformed(ActionEvent a) {
count++;
if(count == 1 || count == 3 || count == 5 || count == 7 || count == 9){
letter = "X";
} else if(count == 2 || count == 4 || count == 6 || count == 8 || count == 10){
letter = "O";
}
if(a.getSource() == button1){
button1.setText(letter);
button1.setEnabled(false);
} else if(a.getSource() == button2){
button2.setText(letter);
button2.setEnabled(false);
} else if(a.getSource() == button3){
button3.setText(letter);
button3.setEnabled(false);
} else if(a.getSource() == button4){
button4.setText(letter);
button4.setEnabled(false);
} else if(a.getSource() == button5){
button5.setText(letter);
button5.setEnabled(false);
} else if(a.getSource() == button6){
button6.setText(letter);
button6.setEnabled(false);
} else if(a.getSource() == button7){
button7.setText(letter);
button7.setEnabled(false);
} else if(a.getSource() == button8){
button8.setText(letter);
button8.setEnabled(false);
} else if(a.getSource() == button9){
button9.setText(letter);
button9.setEnabled(false);
}/*Determine who won*/
//horizontal wins
if( button1.getText().equals(button2.getText()) && (button2.getText() == null ? button3.getText() == null : button2.getText().equals(button3.getText())) && !"".equals(button1.getText()) || (button4.getText() == null ? button5.getText() == null : button4.getText().equals(button5.getText())) && (button5.getText() == null ? button6.getText() == null : button5.getText().equals(button6.getText())) && !"".equals(button4.getText()) || (button7.getText().equals(button8.getText()) && button8.getText().equals(button9.getText()) && !"".equals(button7.getText()) || (button1.getText() == null ? button4.getText() == null : button1.getText().equals(button4.getText())) && button4.getText().equals(button7.getText()) && !"".equals(button1.getText()) || button2.getText().equals(button5.getText()) && button5.getText().equals(button8.getText()) && !"".equals(button2.getText()) || (button3.getText().equals(button6.getText()) && button6.getText().equals(button9.getText()) && !"".equals(button3.getText()) || button1.getText().equals(button5.getText()) && button5.getText().equals(button9.getText()) && !"".equals(button1.getText())))){
win = true;
}
else win = (button3.getText() == null ? button5.getText() == null : button3.getText().equals(button5.getText())) && (button5.getText() == null ? button7.getText() == null : button5.getText().equals(button7.getText())) && !"".equals(button3.getText()); /*Show a dialog if someone wins or the game is tie*/
        //vertical wins
        //diagonal wins
 
if(win == true){
JOptionPane.showMessageDialog(null, letter + " WINS!");
} else if(count == 9 && win == false){
JOptionPane.showMessageDialog(null, "Tie Game!");
}
}

public static void main(String[] args){
   
    TitleFrame titleframe = new TitleFrame (); 
    titleframe.show();

    
    
 
  
}

       
    

    private static class Trivia {

        public Trivia() {
        }

        private void show() {
            throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
        }
    }
} 



 

